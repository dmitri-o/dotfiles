" Initialization {{{
set nocompatible	" Set compatibility to Vim only.
filetype off		" Helps force plug-ins to load correctly when it is turned back on below.
" or set noswapfile nobackup noundofile
set backupdir=${XDG_CACHE_HOME}/vim/backup | call mkdir(&backupdir, 'p', 0700)
set directory=${XDG_CACHE_HOME}/vim/swap   | call mkdir(&directory, 'p', 0700)
set viewdir=${XDG_CACHE_HOME}/vim/view     | call mkdir(&viewdir, 'p', 0700)
set undodir=${XDG_CACHE_HOME}/vim/undo     | call mkdir(&undodir, 'p', 0700)
set directory=${XDG_CACHE_HOME}/vim/vimtmp,.
set runtimepath+=${XDG_CONFIG_HOME}/vim,${XDG_CONFIG_HOME}/vim/after

set viminfo='10,<100,:100,%,n${XDG_CACHE_HOME}/vim/.viminfo
" viminfo
" 'q  : q, number of edited file remembered
" <m  : m, number of lines saved for each register
" :p  : p, number of  history cmd lines remembered
" %   : saves and restore the buffer list
" n...: fully qualified path to the viminfo files (note that this is a literal "n")

" sourcing files
"so ${XDG_CONFIG_HOME}/vim/plugin/comments.vim
"so ~/.config/vim/plugin/comments.vim
"so ~/.config/vim/colors/*.vim
" Store info from no more than 100 files at a time, 9999 lines of text, 100kb of data.
" Useful for copying large amounts of data between files.

" remove extraneous ".netrwhist" file
autocmd VimLeave * if filereadable("~/.vim/.netrwhist") | call delete("~/.vim/.netrwhist;rmdir ~/.vim") | endif
"}}}
" Setting {{{
set ttyfast			" smoother changes
set textwidth=0		" Line width to endless
"set columns=80
"set wrapmargin=78	" wrap at column 78
set wrapmargin=0
set wrap			" wrap visually
set linebreak
set nolist			" list diables linebreak
set notitle     	" set no title
set ignorecase		" ignore case when searching
"set noignorecase	" don't ignore case
set noro			" default to not read only in vimdiff for git difftool
set helpheight=15	" 15 lines of help is enough
"setlocal spell spelllang=en   " autospelling
set paste
set encoding=utf-8
set ts=4 sw=4		" tabstops 4 spaces and shiftwidth 4 spaces
set modelines=0		" Don't use vim settings from the bottom of the file - security concern
"set virtualedit=all	" block insert
" TODO  do I need grep|ag|rg ? see below for ackprg
"}}}
" Colorschemes {{{
"colorscheme default
" colorschemes from /usr/share/vim/vim82/colors/
"colorscheme desert
"colorscheme morning
"colorscheme murphy
"colorscheme pablo
"colorscheme peachpuff
"colorscheme ron
"colorscheme shine
"colorscheme slate
"colorscheme torte
"colorscheme zellner
"colorscheme fahrenheit

" colorschemes from ~/.config/vim/colors/
"colorscheme asu1dark
"colorscheme ayu
"colorscheme challenger_deep
"colorscheme cobalt
"colorscheme detailed
"colorscheme distinguished
"colorscheme fahrenheit
"colorscheme farout
"colorscheme flattened_dark
"colorscheme hemisu
"colorscheme ingretu
"colorscheme inkpot
"colorscheme ir_black
"colorscheme jellybeans
"colorscheme landscape
"colorscheme last256
"colorscheme meta5
"colorscheme noctu
"colorscheme PaperColor
"colorscheme smyck
"colorscheme solarized
"colorscheme sunburst
"colorscheme synthetic
"colorscheme thaumaturge
colorscheme Tomorrow-Night-Bright
"colorscheme-framer-syntax
"colorscheme-hackerman
"colorscheme vividchalk
"}}}
" Status Line {{{
" lightline will take care about the status line
set laststatus=2
set showcmd
set noshowmode		" No show current input mode in the status line
set noruler			" No show the line number on the status line
" }}}
" Highlighting {{{
" Needed for Syntax Highlighting and stuff
filetype plugin indent on
syntax enable

"set cursorline
":hi CursorLine cterm=underline
":hi CursorLine gui=underline

" Visual mode highlighting
:hi Visual term=reverse cterm=reverse guibg=LightGrey
" clear highligts with screen redraw
nnoremap <silent> <C-l> :let @/=""<CR>

" use the_silver_searcher
let g:ackprg = 'ag --vimgrep'

"}}}
" Folding {{{
set foldenable          " enable folding
set foldmethod=marker
set foldlevel=0
"}}}
" MISC {{{

let g:tex_flavor = "latex"

" enable backspace key
set t_kb=
fixdel
" allow to use backspace instead of "x"
" set backspace=indent,eol,start whichwrap+=<,>,[,]

" Remove any trailing whitespace that is in the file
autocmd BufRead,BufWrite * if ! &bin | silent! %s/\s\+$//ge | endif

" this makes the mouse paste a block of text without formatting it
map <MouseMiddle> <esc>"*p

" map make to F9
":map <f9> :make
":map <silent> <F9> :w<CR>:make all<CR>
"}}}
