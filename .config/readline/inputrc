$include /etc/inputrc

# all the fun stuff goes below
## Options from /etc/inputrc are hashed out {{{
#================================================
# comments on the same line causes malfunction of the options
# so comments are on a separate lines.

# Allow UTF-8 input and output, instead of showing stuff like $'\0123\0456'
# Enable 8bit input
#set meta-flag on
# Keep the 8th bit for display
#set input-meta on
#set output-meta on

# Turns off 8th bit stripping
#set convert-meta off

# Immediately add a trailing slash when autocompleting symlinks to directories
#set mark-symlinked-directories on

# no sounds  can be: none, visible or audible
#set bell-style none
# }}}

# Misc options {{{
#================================================
# Allow the command prompt to wrap to the next line
set horizontal-scroll-mode off

# The defaults for these two variables are "(cmd)" and "(ins)" for command and
# insert modes.  According to the man-page for readline, you can
# also specify non-printable characters, such as terminal control sequences, by
# embedding the sequences between the \1 and \2 escape characters.
# I want my cursor to have a pipe shape when I am in insert mode
# and a block shape when I am in command mode
set show-mode-in-prompt on
set vi-cmd-mode-string "\1\e[2 q\2"
set vi-ins-mode-string "\1\e[6 q\2"

# Do not expand "~" to the home directory when completing.
set expand-tilde off

# Use vi line editing commands.
set editing-mode vi

# Use vi keymap.
set keymap vi

$if mode=vi
    set keymap vi-insert
    Control-l clear-screen
$endif

# }}}

# Completion options {{{
#================================================

# Do not autocomplete hidden files unless the pattern explicitly begins with a dot
set match-hidden-files off

# Show all autocomplete results at once
set page-completions off

# Ignore case for autocompletion
set completion-ignore-case on

# Treat hypen and underscores as equivalent.
# This option requires completion-ignore-case to be enabled.
set completion-map-case on

# Display the common prefix choices on the first completion then cycle the
# available choices on the next completion.
set menu-complete-display-prefix on

# Avoid using TAB twice to show the matches
# Immediately display completion matches.
set show-all-if-ambiguous on

set show-all-if-unmodified  on

# Display one match per line
set completion-display-width 0

# Display the common prefix using a different color
set colored-completion-prefix on

# Show extra file information when completing, like `ls -F` does
set visible-stats on

# Display completions using different colors to indicate their file type
set colored-stats on


# Ask for confirmation if the number of possible completions is greater than...
set completion-query-items 10

# Skip already completed text
# Be more intelligent when autocompleting by also looking at the text after
# the cursor. For example, when the current line is "cd ~/src/mozil", and
# the cursor is on the "z", pressing Tab will not autocomplete it to "cd
# ~/src/mozillail", but to "cd ~/src/mozilla". (This is supported by the
# Readline used by Bash 4.)
set skip-completed-text on

# }}}

# KEYS  {{{
#================================================
# https://en.wikipedia.org/wiki/ANSI_escape_code
# To test what a key is, run cat and then press the key:
# $ cat
# ^[[A  == arrow Up
# ^[[B  == arrow Down
# ^[[D  == arrow Left
# ^[[C  == arrow Right
# ^[[5~ == Page Up
# ^[[6~ == Page Down
# To get a list of which escape sequences correspond to which keyboard-keys,
# you can use a command such as
# $ infocmp -L -1
# $ infocmp -L -1 xterm

# When tab-completing, show a menu.
TAB: menu-complete
"\e[Z": menu-complete-backward

# Use Alt/Meta + Delete to delete the preceding word
"\e[3;3~": kill-word

## Search in history
# Match the current input in history when pressing UP or DOWN
# CTRL-UP and CTRL-DOWN to do partial search
"\e[A": history-search-backward
"\e[B": history-search-forward
"\C-P": history-search-backward
"\C-N": history-search-forward
# The PageUp and PageDown keys are set with the "e[5~": & "e[6~": lines
"\e[5~": history-search-backward
"\e[6~": history-search-forward

# Do not display ^C
set echo-control-characters off

$if Bash
    # Completion
    # do history expansion when space entered
    #Space: magic-space

	# Disable Bash 5.1 highlighted paste feature.
	# See: https://is.gd/fsgOMe & https://is.gd/Uccmae
	set enable-bracketed-paste off
$endif

# }}}
